#!/bin/bash
# MCP Setup - Configure MCP servers for Claude Code
# Follows microdot precedence: local overrides public, both are optional

CLAUDE_CODE_CONFIG="$HOME/.claude.json"
ZSH="${ZSH:-$HOME/.dotfiles}"

# Find servers.json following precedence (local wins if both exist)
MCP_CONFIG=""
if [[ -f "$ZSH/.local/claude/mcp/servers.json" ]]; then
    # Local takes precedence
    MCP_CONFIG="$ZSH/.local/claude/mcp/servers.json"
    echo "Using local MCP configuration"
elif [[ -f "$ZSH/claude/mcp/servers.json" ]]; then
    # Fall back to public
    MCP_CONFIG="$ZSH/claude/mcp/servers.json"
    echo "Using public MCP configuration"
else
    # Neither exists - graceful exit
    echo "No MCP servers.json found (checked local and public)"
    echo "MCP setup skipped - this is not an error"
    exit 0
fi

echo "Setting up MCP servers for Claude Code..."

# Check if jq is installed
if ! command -v jq >/dev/null 2>&1; then
    echo "Warning: jq is required for MCP setup. Install with: brew install jq"
    echo "MCP setup skipped"
    exit 0
fi

# Backup existing config if it exists
if [ -f "$CLAUDE_CODE_CONFIG" ]; then
    cp "$CLAUDE_CODE_CONFIG" "$CLAUDE_CODE_CONFIG.backup"
fi

# Extract MCP servers from found config
MCP_SERVERS=$(jq '.mcpServers // {}' "$MCP_CONFIG")

# Create or update Claude Code config with MCP servers
if [ -f "$CLAUDE_CODE_CONFIG" ]; then
    # Merge MCP servers into existing config
    jq --argjson servers "$MCP_SERVERS" '.mcpServers = $servers' "$CLAUDE_CODE_CONFIG" > "$CLAUDE_CODE_CONFIG.tmp" && \
    mv "$CLAUDE_CODE_CONFIG.tmp" "$CLAUDE_CODE_CONFIG"
else
    # Create new config with MCP servers
    echo "$MCP_SERVERS" | jq '{mcpServers: .}' > "$CLAUDE_CODE_CONFIG"
fi

echo " MCP servers configured successfully for Claude Code"
echo "   Source: $MCP_CONFIG"
echo "Restart Claude Code to apply changes"
